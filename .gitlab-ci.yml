# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

image: maven:latest
stages:          
  - build
  - test
  - package
  - verify
  - install
  #- deploy

build-job:       
  stage: build
  script:
    - mvn clean
    - mvn compiler:compile
    - echo "Compiling the code..."
    - echo "Compile complete."

unit-test-job:   
  stage: test    
  script:
    - mvn test-compile
    - echo "Running unit tests... This will take about 60 seconds."
    - sleep 60
    - echo "Code coverage is 90%"

package-job:      
  stage: package  
  script:    
    - mvn package
    - echo "Packaging application..."    
    - echo "Application successfully packaged."

verify-job:
  stage: verify  
  script:
    - mvn verify
    - echo "run any checks to verify the package is valid and meets quality criteria...."            
    - echo "Application successfully verified."
  
install-job:      
  stage: install  
  script:
    - mvn jar:jar install:install
    - echo "Installing application..."            
    - echo "Application successfully installed."

#deploy-job:      
#  stage: deploy  
#  script:
#    - mvn deploy
#    - echo "Deploying application..."            
#    - echo "Application successfully deployed."
